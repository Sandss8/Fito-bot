from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, filters
from config import Config
from handlers.base import BaseHandler
from datetime import datetime
from database import Database


class RegistrationHandler(BaseHandler):
    def __init__(self):
        super().__init__()
        self.db = Database()
        self.message_handlers = [
            (filters.Text(["–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"]) & ~filters.COMMAND, self.start_registration),
            (filters.Text(["–ú", "–ñ"]) & ~filters.COMMAND, self.handle_gender),
            (filters.Regex(r'^\d+$') & ~filters.COMMAND, self.handle_numeric_input),
            (filters.Regex(r'^\d+[,.]?\d*$') & ~filters.COMMAND, self.handle_weight_input),
            (filters.Text(Config.ACTIVITY_LEVELS) & ~filters.COMMAND, self.handle_activity)
        ]

    async def start_registration(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        if context.user_data.get('registration_complete', False):
            await update.message.reply_text("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
            return Config.CHOOSE_ACTION

        await update.message.reply_text(
            "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤.\n"
            "–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: |–ü—Ä–∏–º–µ—Ä|"
        )
        reply_keyboard = [["–ú", "–ñ"]]
        await update.message.reply_text(
            "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–ª:",
            reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)
        )
        return Config.GENDER

    async def handle_gender(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞"""
        gender = update.message.text.upper()
        context.user_data['gender'] = gender

        gender_text = "–ú—É–∂—Å–∫–æ–π" if gender == "–ú" else "–ñ–µ–Ω—Å–∫–∏–π"
        await update.message.reply_text(
            f"‚úÖ –í–∞—à –ø–æ–ª: {gender_text}",
            reply_markup=ReplyKeyboardRemove()
        )
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–ø–æ–ª–Ω—ã—Ö –ª–µ—Ç):\n|25|")
        return Config.AGE

    async def handle_numeric_input(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –≤–≤–æ–¥–æ–≤ (–≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç)"""
        current_state = context.user_data.get('registration_stage', 'age')

        if current_state == 'age':
            return await self.handle_age(update, context)
        elif current_state == 'height':
            return await self.handle_height(update, context)

    async def handle_age(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞"""
        try:
            age = int(update.message.text)
            if not 10 <= age <= 120:
                raise ValueError

            context.user_data['age'] = age
            context.user_data['registration_stage'] = 'height'

            await update.message.reply_text(f"‚úÖ –í–∞–º {age} –ª–µ—Ç")
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç –≤ —Å–º:\n|175|")
            return Config.HEIGHT

        except ValueError:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (10-120 –ª–µ—Ç)")
            return Config.AGE

    async def handle_height(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ—Å—Ç–∞"""
        try:
            height = int(update.message.text)
            if not 100 <= height <= 250:
                raise ValueError

            context.user_data['height'] = height
            context.user_data['registration_stage'] = 'weight'

            await update.message.reply_text(f"‚úÖ –í–∞—à —Ä–æ—Å—Ç: {height} —Å–º")
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–≥:\n|70.5|")
            return Config.WEIGHT

        except ValueError:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç (100-250 —Å–º)")
            return Config.HEIGHT

    async def handle_weight_input(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ—Å–∞"""
        try:
            weight = float(update.message.text.replace(',', '.'))
            if not 30 <= weight <= 300:
                raise ValueError

            context.user_data['weight'] = weight
            context.user_data['registration_stage'] = 'activity'

            await update.message.reply_text(f"‚úÖ –í–∞—à –≤–µ—Å: {weight} –∫–≥")

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—Ä–æ–≤–Ω—è–º–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            reply_keyboard = [
                [Config.ACTIVITY_LEVELS[0]],
                [Config.ACTIVITY_LEVELS[1], Config.ACTIVITY_LEVELS[2]],
                [Config.ACTIVITY_LEVELS[3], Config.ACTIVITY_LEVELS[4]],
                [Config.ACTIVITY_LEVELS[5]]
            ]

            await update.message.reply_text(
                "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:",
                reply_markup=ReplyKeyboardMarkup(
                    reply_keyboard,
                    one_time_keyboard=True,
                    resize_keyboard=True
                )
            )
            return Config.ACTIVITY_LEVEL

        except ValueError:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å (30-300 –∫–≥)")
            return Config.WEIGHT

    async def handle_activity(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
        activity = update.message.text
        context.user_data['activity_level'] = activity
        context.user_data['registration_complete'] = True

        await update.message.reply_text(
            f"‚úÖ –í–∞—à —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {activity[2:]}",
            reply_markup=ReplyKeyboardRemove()
        )

        # –†–∞—Å—á–µ—Ç –¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã –∫–∞–ª–æ—Ä–∏–π
        weight = context.user_data['weight']
        height = context.user_data['height']
        age = context.user_data['age']
        gender = context.user_data['gender']
        activity_factor = Config.ACTIVITY_FACTORS[activity]

        # –§–æ—Ä–º—É–ª–∞ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞
        if gender == "–ú":
            bmr = (10 * weight) + (6.25 * height) - (5 * age) + 5
        else:
            bmr = (10 * weight) + (6.25 * height) - (5 * age) - 161

        daily_calories = bmr * activity_factor

        await update.message.reply_text(
            "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞:\n\n"
            f"üîπ –û—Å–Ω–æ–≤–Ω–æ–π –æ–±–º–µ–Ω: {bmr:.0f} –∫–∫–∞–ª/–¥–µ–Ω—å\n"
            f"üîπ –° —É—á–µ—Ç–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {daily_calories:.0f} –∫–∫–∞–ª/–¥–µ–Ω—å\n\n"
            "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω–∞—è –Ω–æ—Ä–º–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤–µ—Å–∞."
        )

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = {
            'user_id': update.message.chat.id,
            'username': update.message.chat.username,
            'first_name': update.message.chat.first_name,
            'last_name': update.message.chat.last_name,
            'gender': gender,
            'age': age,
            'height': height,
            'weight': weight,
            'activity_level': activity,
            'bmr': bmr,
            'daily_calories': daily_calories,
            'registration_date': datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        }

        self.db.save_user_data(user_data)

        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        reply_keyboard = [["–ü–æ–¥—Å—á—ë—Ç –∫–∫–∞–ª –±–ª—é–¥–∞"]]
        await update.message.reply_text(
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ß—Ç–æ –¥–∞–ª—å—à–µ?",
            reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        return Config.CHOOSE_ACTION
